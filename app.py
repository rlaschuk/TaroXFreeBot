from flask import Flask, request
import telegram
import os
from openai import OpenAI
from openai import OpenAIError, APITimeoutError

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.environ.get("BOT_TOKEN")
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
    raise ValueError("‚ùå BOT_TOKEN –∏/–∏–ª–∏ OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
bot = telegram.Bot(token=TELEGRAM_TOKEN)
openai_client = OpenAI(api_key=OPENAI_API_KEY)
app = Flask(__name__)

# –§—É–Ω–∫—Ü–∏—è –ò–ò-–≥–∞–¥–∞–Ω–∏—è –Ω–∞ 3 –∫–∞—Ä—Ç—ã
def generate_three_card_reading(question):
    prompt = f"""
    –¢—ã ‚Äî –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–∞—è –∏ —É–º–Ω–∞—è –≥–∞–¥–∞–ª–∫–∞ –Ω–∞ –¢–∞—Ä–æ. –û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ, –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ –¥–µ–ª—É, –±–µ–∑ —à–∞–±–ª–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏.

    –í–æ–ø—Ä–æ—Å: "{question}"

    –í—ã—Ç—è–Ω–∏ 3 –∫–∞—Ä—Ç—ã:
    ‚Äî –ù–∞–∑–æ–≤–∏ –∫–∞–∂–¥—É—é üé¥
    ‚Äî –ì–æ–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–æ, —è—Å–Ω–æ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫ —Å –æ–ø—ã—Ç–æ–º, –∞ –Ω–µ –∫–∞–∫ —Ä–æ–±–æ—Ç

    –í –∫–æ–Ω—Ü–µ: —Å–¥–µ–ª–∞–π –ø—Ä—è–º–æ–π –≤—ã–≤–æ–¥ ‚Äî "–¥–∞", "–Ω–µ—Ç", "–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ", "–ª—É—á—à–µ –Ω–µ –Ω–∞–¥–æ", –∏ —Ç.–ø. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è, –Ω–æ –±–µ–∑ —Ä–∞–∑–º–∞–∑—ã–≤–∞–Ω–∏—è —Å–º—ã—Å–ª–∞.

    –ë–µ–∑ "–≤—Å—ë –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö", –±–µ–∑ –æ–±—â–∏—Ö —Å–æ–≤–µ—Ç–æ–≤. –ß—ë—Ç–∫–æ –∏ –ø–æ —Å—É—Ç–∏.
    """
    response = openai_client.chat.completions.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.9,
        max_tokens=700,
        timeout=20  # —Ç–∞–π–º-–∞—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    )
    return response.choices[0].message.content

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
@app.route('/webhook', methods=['POST'])
def webhook():
    update = telegram.Update.de_json(request.get_json(force=True), bot)

    if update.message:
        chat_id = update.message.chat.id
        text = update.message.text.strip()

        if text.lower() == "/start":
            bot.send_message(
                chat_id,
                "üîÆ –ü—Ä–∏–≤–µ—Ç! –Ø –≥–∞–¥–∞—é –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /ask <—Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥."
            )

        elif text.lower() == "/about":
            bot.send_message(
                chat_id,
                "üÉè –Ø –∏—Å–ø–æ–ª—å–∑—É—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ 3 –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ.\n"
                "–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ /ask."
            )

        elif text.lower().startswith("/ask"):
            try:
                question = text[4:].strip()
                if not question:
                    bot.send_message(
                        chat_id,
                        "‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å. –ü—Ä–∏–º–µ—Ä:\n/ask –ß—Ç–æ –∂–¥—ë—Ç –º–µ–Ω—è –≤ –ª—é–±–≤–∏?"
                    )
                else:
                    bot.send_message(chat_id, "üîÆ –§–æ—Ä–º–∏—Ä—É—é —Ä–∞—Å–∫–ª–∞–¥, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")
                    reading = generate_three_card_reading(question)
                    bot.send_message(chat_id, reading)
            except APITimeoutError:
                bot.send_message(chat_id, "‚åõ –ú–∞–≥–∏—è –º–µ–¥–ª–∏—Ç... –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.")
            except OpenAIError as e:
                bot.send_message(chat_id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π –≤ –ø–æ—Ç–æ–∫–µ –º–∞–≥–∏–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
                print("GPT ERROR:", e)

        else:
            bot.send_message(chat_id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π /start, /ask –∏–ª–∏ /about.")

    return "OK", 200

# –î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def home():
    return "‚úÖ TaroXFreeBot is working."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
@app.route('/set_webhook')
def set_webhook():
    webhook_url = "https://taroxfreebot.onrender.com/webhook"
    success = bot.set_webhook(url=webhook_url)
    return f"Webhook set: {success}"
